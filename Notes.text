Java Bootcamp 
=========================================================================================
Core Java 

1) In Java, there is only pass value concept in methods
2) We can change the primitive datastypes vlues using blocks
3) Already Initialised outside the block in the same method, hence you cannot initialised again.
4) Values initialised in the block,will remains in block.
5) Anythings initalised outside the block can be used inside the block 
6) Anythings initalised inside the block can't be used outside the block 
7) Shadowing in java means its a practices of using two variables with the same name within the scope thats overlap
8) In shadowing, Scope will be begining when value is initialised 
9) Array object in java may not be Continues becouse:
	i) Array object are stored in heap
	ii) Heap object are not continues 
10) new is used to create an Object
11) Premitives are stored in stack memory only and all non premitives (array,string) are stored in heap memory 
12) Strings are inmutables in java and array are mutable.
=========================================================================================
Object Oriented Programming
-----------------------------

1) new operator is dyanmically allocates memory at runtime and return reference to it.
   hence all class in java allocated dyanamically 
2) constructor is special function, that runs when you create an  object and allocates some variables 
3) final variables always initized it while declearing it 
4) Values of instace variable never changed it always refer to same object but value of 
object can changed
5) When a non premitive is final, you cannot reassign it.
6) Packages are cantainers of classes, nothing but folder

=========================================================================================
Static
---------------------

1) Static :- When a member decleared static it can be access before any of the object of the class been created and without referencing to object 
2) inside static method you cannot use anything that non static
3) Static method only access only static data 
4) Non static data belongs to an object 
5) Static is not dependent of an object 
6) Only inner static can vaild otherwise gives error 
7) Outside class can not be static because it is not itslef dependent on another class 

=========================================================================================
Inheritance
------------------------

1) Inheritance means if there is a class that is able to use properties and other suff's from other class 
2) Super method is used to initialise values present in parent class
3) it is actually the type of reference vairiable that determines and not the type of the object that determines what member can be access 
(example in parents teacher meeting tearcher is access out parents not us)
4) Multiple and hybrid inheritance are not allowed in java 
5) Because abiguity problem we can't use multiple and hybrid inheritance
=========================================================================================
Polymorphism
-----------------

1) Poly means many and morphism means many way to represent 
2) act of representing in multiple ways  
3) Types of polymorphism:
	i) Complie time/ Static Polymorphism achieved by method overloading(ex.multiple constructor)
	ii) Run time / Dynamic Polymorphism achieved by method overriding (ex.)

=========================================================================================
Encapsulation
-----------------------
1) Encapsulation means wrapping up implementation of the data member
2) Hiding unnessary details and showing valuable information
3) Abstraction is design level issue and encapsulation solving implementation level issue

=========================================================================================
Accesss modifier
----------------
	+ : Access
	- : Not Access

			| Class |   Package  |  subclass  |  subclass  | World 
			|		| 			 | (same pkg) | (diff pkg) | (diff pkg & not Subclass) 
------------|-------|------------|------------|------------|-----------------------------
Public		|	+	|	  +		 |		+	  |		+	   |	+
------------|-------|------------|------------|------------|-----------------------------
Protected	|	+	|	  +		 |		+	  |		+	   |	-
------------|-------|------------|------------|------------|-----------------------------
No Modifier	|	+	|	  +		 |		+	  |		-	   | 	-
------------|-------|------------|------------|------------|-----------------------------
Private		|	+	|	  -		 |		-	  |		-	   |	-
------------|-------|------------|------------|------------|-----------------------------


1) Only Subclass can access the member in protected class when its outside in package 
=========================================================================================
Object Class 
--------------
1) Object class is root of class hierarchy 
2) hashcode method gives number representation of object 
=========================================================================================
Abstract Methods
------------------
1) Any class that contains one or more abstrct method must also be decleared as abstract 
2) You can't create object of abstract class
=========================================================================================
Interfaces
---------------
1) Interfaces contains abstract functions
2) Interface most specifically like what a class doing not, how class doing 
3) Abstract class provoid the implementation of interface but interface can't provoid 	the implementation of abstract calss 
4) We use interface beacuse multiple inheritance not allowed in java so interface overcome this problem 
5) We can implemented multile interface togather 
6) Interfaces not care about two calss related or not  
Types of Interface:
	a) Normal Interface: If there two or more method in interface they called as Normal Interface
	b) Functional / Sam: IF there are only one method in interface they called as SAM Interface
	c)Marker Interface: There are no any methods in interface or blank interface called as Marker Interface.



=========================================================================================
Anotation
----------------------
1) Anotation internally its an interface  
=========================================================================================
Exception Handling
------------------------------
										----------
										| Object |
										----------
										     |
										-----------
									    |Throuable|
									    -----------
									    	 |
						----------------------------------------------
						|											 |				
				  -----------									----------
				  |Exception|									|  Error |
				  -----------									----------
				       |
	     ----------------------------
	     |							|
	---------				   -----------
	| Check	|				   |Unchecked|
	---------			  	   -----------

1) Checked Exception are get during complied time 
2) Unchecked exception get during file is running (ig. divided by 0)
=========================================================================================
Collection
-----------------
1) A collection is a framework that provides an architecture to store and manipulate a group of objects.

2) Collections are used to perform operations such as searching, sorting, insertion, manipulation, and deletion on data.

=========================================================================================
Exception Handling
--------------------------
1) Types of error
	a) Complie time error 
	b) Run time error
	c) Logical Error 
	
=========================================================================================
Threads 
-----------------------------
1) whenever we have to run 2 things at same time we use threads
2) In every thread you need to run method that how it works
